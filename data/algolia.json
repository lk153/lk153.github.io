[
    {
        "id": 1,
        "title":  "Welcome to Personal Tech Blog üñêÔ∏è",
        "permalink": "https://lk153.github.io/welcome.html",
        "desc": "This blog is a chronicle of my adventures in software engineering, with a focus on backend development using GO and Clean Architecture. Here, you'll find a mix of tutorials, personal experiences, and professional insights aimed at helping you become a better developer. I hope you enjoy your stay and find the content both educational and engaging. Let's dive into the world of code together!",
        "category": "personal",
        "post_date": "2024-06-26",
        "post_date_timestamp": 1719334800
    },
    {
        "id": 2,
        "title":  "My Profile üßë‚Äçüíª",
        "permalink": "https://lk153.github.io/profile.html",
        "desc": "I'm a software engineer with a passion for building efficient and scalable backend systems. With experience as a full-stack developer, I now focus primarily on backend development. My current tech stack includes the GO language, and I build most of my projects following the principles of Clean Architecture.",
        "category": "personal",
        "post_date": "2024-06-26",
        "post_date_timestamp": 1719334800
    },
    {
        "id": 3,
        "title":  "My Destiny ‚òï",
        "permalink": "https://lk153.netlify.app/",
        "desc": "Hey there, coffee lovers and code enthusiasts! I'm a software engineer who believes that a good cup of coffee is the best way to fuel creativity and productivity. Here on 'My Destiny' you maybe find a story of yours also",
        "category": "personal",
        "post_date": "2024-06-27",
        "post_date_timestamp": 1719421200
    },
    {
        "id": 4,
        "title": "Understanding & Utilizing Go Context",
        "permalink": "https://lk153.github.io/understanding-utilizing-go-context.html",
        "desc": "In Go, the context package is a fundamental tool designed to manage and share request-scoped data, cancellation signals, and timeouts or deadlines across different layers of an application.",
        "category": "golang",
        "post_date": "2024-07-12",
        "post_date_timestamp": 1720717200
    },
    {
        "id": 5,
        "title": "Go Garbage Collector",
        "permalink": "https://lk153.github.io/go-garbage-collector.html",
        "desc": "This post help you in better understanding your application costs by providing insights into the Go garbage collector. By the way, It also provides guidance on how to improve your application s' resource utilization",
        "category": "golang",
        "post_date": "2024-07-15",
        "post_date_timestamp": 1720976400
    },
    {
        "id": 6,
        "title": "Go - Best practices for tool dependencies",
        "permalink": "https://lk153.github.io/go-best-practice-tool-deps.html",
        "desc": "Go modules support developer tools (commands) as dependencies. For example, your project might require a tool to help with code generation, or to lint/vet your code for correctness. Adding developer tool dependencies ensures that all developers use the same version of each tool.",
        "category": "golang",
        "post_date": "2024-07-16",
        "post_date_timestamp": 1721062800
    },
    {
        "id": 7,
        "title": "6 Unique & Lesser-known Go Techniques",
        "permalink": "https://lk153.github.io/six-go-techniques.html",
        "desc": "Today, we‚Äôre exploring 6 unique and lesser-known Go techniques: Generate, Build tags, Functional Options Pattern, Error Wrapping, Using Context for Cancellation, JSON Tagging for Structs",
        "category": "golang",
        "post_date": "2024-07-24",
        "post_date_timestamp": 1721779200
    },
    {
        "id": 8,
        "title": "High Availability",
        "permalink": "https://lk153.github.io/high-availability.html",
        "desc": "What is high availability? High availability means that we eliminate single points of failure so that should one of those components go down, the application or system can continue running as intended.",
        "category": "system architecture",
        "post_date": "2024-08-03",
        "post_date_timestamp": 1722643200
    },
    {
        "id": 9,
        "title": "How do you measure and validate the quality of acceptance criteria in agile?",
        "permalink": "https://lk153.github.io/measure-validate-quality-of-ac-in-agile.html",
        "desc": "How do you measure and validate the quality of acceptance criteria in agile?",
        "category": "agile",
        "post_date": "2024-08-10",
        "post_date_timestamp": 1723248000
    },
    {
        "id": 10,
        "title": "OSI Model",
        "permalink": "https://lk153.github.io/osi-model.html",
        "desc": "The open systems interconnection (OSI) model is a conceptual model which enables diverse communication systems to communicate using standard protocols. The OSI provides a standard for different computer systems to be able to communicate with each other.",
        "category": "network",
        "post_date": "2024-09-24",
        "post_date_timestamp": 1727136000
    },
    {
        "id": 11,
        "title": "Difference Between Supervised, Unsupervised, Semi-Supervised and Reinforcement Learning",
        "permalink": "https://lk153.github.io/differences-ai-learning.html",
        "desc": "What‚Äôs the Difference Between Supervised, Unsupervised, Semi-Supervised and Reinforcement Learning?",
        "category": "AI",
        "post_date": "2024-12-18",
        "post_date_timestamp": 1734497363
    },
    {
        "id": 12,
        "title": "8 Types of Prompt Engineering",
        "permalink": "https://lk153.github.io/type-prompt-engineering.html",
        "desc": "There are 8 prompt engineering methods:(1) Zero-Shot Learning, (2) One-Shot Learning, (3) Few-Shot Learning, (4) Chain-of-Thought Prompting, (5) Iterative Prompting, (6) Negative Prompting, (7) Hybrid Prompting, (8) Prompt Chaining",
        "category": "AI",
        "post_date": "2024-12-24",
        "post_date_timestamp": 1734998400
    },
    {
        "id": 13,
        "title": "Software Development Outsourcing Checklist ‚Äî How to Ensure Success",
        "permalink": "https://lk153.github.io/software-development-outsourcing-checklist.html",
        "desc": "Leveraging a trusted development partner can help you expedite your product roadmap and adoption of new technologies, however, these projects take thoughtful planning and structure to execute successfully. This software development outsourcing checklist outlines many of the key practices that are critical to success and are built on the following key principles",
        "category": "software management",
        "post_date": "2024-12-30",
        "post_date_timestamp": 1735516800
    },
    {
        "id": 14,
        "title": "gRPC Server Reflection Tutorial",
        "permalink": "https://lk153.github.io/grpc-server-reflection.html",
        "desc": "gRPC Server Reflection provides information about publicly-accessible gRPC services on a server, and assists clients at runtime to construct RPC requests and responses without precompiled service information. It is used by gRPCurl, which can be used to introspect server protos and send/receive test RPCs.",
        "category": "grpc",
        "post_date": "2025-01-09",
        "post_date_timestamp": 1736380800
    },
    {
        "id": 15,
        "title": "D≈©ng c·∫£m v√† li·ªÅu m·∫°ng ‚Äì Ranh gi·ªõi mong manh gi·ªØa tr√≠ tu·ªá v√† b·ªëc ƒë·ªìng",
        "permalink": "https://lk153.github.io/dung-cam-vs-lieu-mang.html",
        "desc": "Trong cu·ªôc s·ªëng, ai c≈©ng t·ª´ng ƒë·ªëi m·∫∑t v·ªõi nh·ªØng t√¨nh hu·ªëng kh√≥ khƒÉn c·∫ßn ƒë·∫øn s·ª± can ƒë·∫£m. Tuy nhi√™n, kh√¥ng ph·∫£i h√†nh ƒë·ªông t√°o b·∫°o n√†o c≈©ng ƒë√°ng ƒë∆∞·ª£c g·ªçi l√† d≈©ng c·∫£m ‚Äì ƒë√¥i khi, ƒë√≥ ch·ªâ l√† s·ª± li·ªÅu m·∫°ng. D√π bi·ªÉu hi·ªán c√≥ th·ªÉ gi·ªëng nhau, nh∆∞ng b·∫£n ch·∫•t c·ªßa hai th√°i ƒë·ªô s·ªëng n√†y l·∫°i kh√°c bi·ªát r·∫•t l·ªõn.",
        "category": "life",
        "post_date": "2025-05-15",
        "post_date_timestamp": 1747242000
    },
    {
        "id": 16,
        "title": "People don‚Äôt quit jobs suddenly",
        "permalink": "https://lk153.github.io/people-dont-quit-jobs-suddenly.html",
        "desc": "People don‚Äôt quit jobs suddenly. Quitting doesn't start with a resignation letter. It starts with a slow exit you never saw coming.",
        "category": "life",
        "post_date": "2025-05-29",
        "post_date_timestamp": 1748451600
    }
]